// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model PortfolioCategory {
  id         String      @id @default(cuid())
  name       String      @unique
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  portfolios Portfolio[]

  @@map("portfolio_categories")
}

model Portfolio {
  id          String            @id @default(cuid())
  title       String
  categoryId  String
  category    PortfolioCategory @relation(fields: [categoryId], references: [id])
  description String            @db.Text
  imageUrl    String            // Main/cover image
  images      PortfolioImage[]  // Relation to PortfolioImage table
  published   Boolean           @default(true)
  order       Int               @default(0)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  @@map("portfolio")
}

model PortfolioImage {
  id          String    @id @default(cuid())
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  imageUrl    String
  order       Int       @default(0)
  createdAt   DateTime  @default(now())

  @@map("portfolio_images")
}

model HeroSlider {
  id              String   @id @default(cuid())
  title           String
  subtitle        String   @db.Text
  imageUrl        String   // Desktop image (recommended: 1920x700px)
  mobileImageUrl  String?  // Mobile image (recommended: 768x500px)
  order           Int      @default(0)
  active          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("hero_sliders")
}

model Partner {
  id        String   @id @default(cuid())
  name      String
  logoUrl   String
  order     Int      @default(0)
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("partners")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  subject   String
  message   String   @db.Text
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model Product {
  id               String          @id @default(cuid())
  title            String
  slug             String          @unique
  category         String
  description      String          @db.Text
  mainImageUrl     String
  images           ProductImage[]  // Relation to ProductImage table
  features         Json            @default("[]") // Array of feature strings: ["feature1", "feature2"]
  technicalSpecs   Json            @default("[]") // Array of spec objects: [{ name: "Name", description: "Desc", imageUrl: "url" }]
  published        Boolean         @default(true)
  order            Int             @default(0)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  @@map("products")
}

model ProductImage {
  id        String   @id @default(cuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  imageUrl  String
  order     Int      @default(0)
  createdAt DateTime @default(now())

  @@map("product_images")
}
